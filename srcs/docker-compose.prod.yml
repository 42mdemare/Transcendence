services:
  caddy:
    container_name: hgp_caddy_prod
    build:
      context: ./requirements/caddy
      dockerfile: Dockerfile
    image: hgp_caddy_img
    ports:
      - "5000:5000"
    volumes:
      # - ./requirements/caddy/Caddyfile:/etc/caddy/Caddyfile
      - certs_https:/app/certs
    networks:
      - hgp_network
    restart: unless-stopped
    depends_on:
      - front_end_prod
      - user_management
      - game_management
      - ai_server

  ai_server:
    container_name: hgp_ai_server
    build:
      context: ./requirements/ai_server
      dockerfile: Dockerfile
    image: hgp_ai_server_img
    networks:
      - hgp_network
    restart: unless-stopped

  front_end_prod:
    container_name: hgp_front_end_prod
    build:
      context: ./requirements/front_end
      dockerfile: Dockerfile.prod
    image: hgp_front_end_prod_img
    volumes:
      - user_avatars:/app/uploads
      - certs_https:/app/certs:ro 
    environment:
      - NODE_ENV=production 
      - API_TARGET=http://hgp_user_management:3000
      - GAME_MANAGEMENT_TARGET=http://hgp_game_management:3003
    networks:
      - hgp_network
    restart: unless-stopped
    depends_on:
      - user_management
      - game_management

  game_management:
    container_name: hgp_game_management
    build:
      context: ./requirements/game_management
      dockerfile: Dockerfile
    image: hgp_game_management_img
    volumes:
      - certs_https:/app/certs:ro 
    environment:
      - NODE_ENV=production
      - AI_SERVER_URL=http://hgp_ai_server:3001
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - CADDY_PROXY=true
    depends_on:
      - ai_server
    networks:
      - hgp_network
    restart: unless-stopped

  user_management:
    container_name: hgp_user_management
    build:
      context: ./requirements/user_management
      dockerfile: Dockerfile
    image: hgp_user_management_img
    env_file: 
      - ./prod.env
    volumes:
      - user_management_db:/app/db
      - user_avatars:/app/uploads
      - certs_https:/app/certs:ro 
    environment:  

      - CADDY_PROXY=true
    networks:
      - hgp_network
    restart: unless-stopped

volumes:
  user_management_db:
    driver_opts:
      type: none
      device: ${HOME}/hgp_data/database
      o: bind
  user_avatars:
    driver_opts:
      type: none
      device: ${HOME}/hgp_data/avatars
      o: bind
  certs_https:
    driver_opts:
      type: none
      device: ${HOME}/hgp_data/certs
      o: bind

networks:
  hgp_network:
    driver: bridge