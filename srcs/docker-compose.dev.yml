services:
  caddy:
    container_name: hgp_caddy
    build:
      context: ./requirements/caddy
      dockerfile: Dockerfile
    image: hgp_caddy_img
    ports:
      - "5000:5000"
    networks:
      - hgp_network
    restart: unless-stopped
    depends_on:
      - front_end
      - user_management
      - game_management
      - ai_server

  ai_server:
    container_name: hgp_ai_server
    build:
      context: ./requirements/ai_server
      dockerfile: Dockerfile
    image: hgp_ai_server_img
    networks:
      - hgp_network
    restart: unless-stopped

  front_end:
    container_name: hgp_front_end
    build:
      context: ./requirements/front_end
      dockerfile: Dockerfile
    image: hgp_front_end_img
    # env_file: ./.env
    volumes:
      - user_avatars:/app/uploads
      - ./certs:/app/certs:ro
      - ./requirements/front_end/server_files/src:/app/src
      - ./requirements/front_end/server_files/public:/app/public
    environment:
      - VITE_API_BASE_URL=/api
      - VITE_PONG_SERVER_BASE_URL=/game
      - VITE_AI_SERVER_BASE_URL=/ai
    networks:
      - hgp_network
    restart: unless-stopped
    depends_on:
      - user_management
      - game_management

  game_management:
    container_name: hgp_game_management
    build:
      context: ./requirements/game_management
      dockerfile: Dockerfile
    image: hgp_game_management_img
    volumes:
      - ./certs:/app/certs:ro
    # env_file: ./.env
    environment:
      - AI_SERVER_URL=http://hgp_ai_server:3001
    networks:
      - hgp_network
    restart: unless-stopped

  user_management:
    container_name: hgp_user_management
    build:
      context: ./requirements/user_management
      dockerfile: Dockerfile
    image: hgp_user_management_img
    env_file:
      - ./dev.env
    volumes:
      - ./certs:/app/certs:ro
      - user_management_db:/app/db
      - user_avatars:/app/uploads
    networks:
      - hgp_network
    restart: unless-stopped

volumes:
  user_management_db:
    driver_opts:
      type: none
      device: ${HOME}/hgp_data/database
      o: bind
  user_avatars:
    driver_opts:
      type: none
      device: ${HOME}/hgp_data/avatars
      o: bind

networks:
  hgp_network:
    driver: bridge
